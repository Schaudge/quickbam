# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script:
    - echo "build - before_script"
    - ls
    - apt update && apt -y install make autoconf libdeflate-dev libgtest-dev libtbb-dev doxygen python3-pip
    - pip install sphinx sphinx-rtd-theme breathe
    - autoreconf -i
    - mkdir -p build
    - cd build
    - ../configure
  script:
    - echo "build - script"
    - ls
    - make
    - make -C docs
    - make dist
  artifacts:
      #key: $CI_COMMIT_BRANCH
    paths:
      - build
      - build-aux
      - autom4te.cache
      - config.h.in

# run tests using the binary built before
test:
  stage: test
  before_script:
    - echo "test - before_script"
    - apt update && apt -y install make autoconf libdeflate-dev libgtest-dev libtbb-dev
  script:
    - echo "test - script"
    - ls
    - cd build/test
    - make all_tests
    - ./all_tests --gtest_output="xml:gtest_report.xml"
  artifacts:
    when: always
    reports:
      junit: build/test/gtest_report.xml

upload:
  stage: deploy
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/quickbam-${CI_COMMIT_TAG}.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/quickbam/${CI_COMMIT_TAG}/quickbam-${CI_COMMIT_TAG}.tar.gz"'

# create release tarball
release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "creating release tarball"
  needs:
    - job: build
      artifacts: true
  
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Source tarball with generated configure script'
          url: 'https://gitlab.com/yiq/quickbam/-/jobs/${CI_JOB_ID}/artifacts/file/build/quickbam-${CI_COMMIT_TAG}.tar.gz'

# deploy documentation
pages:
  stage: deploy
  image: alpine:latest
  environment:
    name: production
    url: https://yiq.gitlab.io/quickbam
  script:
    - cp -a build/docs/_build/html ./public
  artifacts:
    paths:
      - public
